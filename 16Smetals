#make.contigs(ffastq=Run13_16S_R1.fastq, rfastq=Run13_16S_R2.fastq, rindex=Run13_16S_I1.fastq, oligos=Run13_16S_oligos.txt, checkorient=t, processors=4)

#summary.seqs(fasta=current)

#set.current(fasta=Run13_16S_R1.trim.contigs.fasta, group=Run13_16S_R1.trim.contigs.groups)
#screen.seqs(fasta=current, group=current, maxambig=0, maxlength=260)
#unique.seqs()
#count.seqs(name=current, group=current)
#summary.seqs(fasta=current, count=current)

#pcr.seqs(fasta=silva.bacteria.fasta, start=11894, end=25319, keepdots=F)
#rename.file(input=silva.bacteria.pcr.fasta, new=silva.v4.fasta)
#summary.seqs(fasta=silva.v4.fasta)

#align.seqs(fasta=Run13_16S_R1.trim.contigs.good.unique.fasta, reference=silva.v4.fasta)
summary.seqs(fasta=current, count=current)

screen.seqs(fasta=current, count=current, summary=current, start=1968, end=11150, maxhomop=8)
summary.seqs(fasta=current, count=current)

filter.seqs(fasta=current, vertical=T, trump=.)

unique.seqs(fasta=current, count=current)

pre.cluster(fasta=current, count=current, diffs=2)

chimera.vsearch(fasta=current, count=current, dereplicate=t)
remove.seqs(fasta=current, accnos=current)

classify.seqs(fasta=current, count=current, reference=trainset9_032012.pds.fasta, taxonomy=trainset9_032012.pds.tax, cutoff=80)
remove.lineage(fasta=current, count=current, taxonomy=current, taxon=Chloroplast-Mitochondria-unknown-Unknown-Eukaryota)

#set.current(fasta=Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, count=Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table, taxonomy=Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.nr_v132.wang.pick.taxonomy)

#get.groups(count=current, fasta=current, groups=HM_1-HM_2-HM_3)
#seq.error(fasta=current, count=current, reference=HMP_MOCK.v35.fasta, aligned=F)
#dist.seqs(fasta=current, cutoff=0.03)
#cluster(column=current, count=current)
#make.shared(list=current, count=current, label=0.03)
#rarefaction.single(shared=current)

#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.summary Run10_16S.mock.error.summary)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.seq Run10_16S.mock.error.seq)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.chimera Run10_16S.mock.error.chimera)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.seq.forward Run10_16S.mock.error.seq.forward)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.seq.reverse Run10_16S.mock.error.seq.reverse)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.count Run10_16S.mock.error.count) 
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.matrix Run10_16S.mock.error.matrix)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.error.ref Run10_16S.mock.error.ref)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist Run10_16S.mock.dist)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list Run10_16S.mock.list)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared Run10_16S.mock.shared)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.groups.rarefaction Run10_16S.mock.rarefaction)


#set.current(fasta=Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.fasta, taxonomy=Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.nr_v132.wang.pick.taxonomy, count=Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.count_table)
#remove.groups(count=current, fasta=current, taxonomy=current, groups=HM_1-HM_2-HM_3)
#cluster.split(fasta=current, count=current, taxonomy=current, splitmethod=classify, taxlevel=4, cutoff=0.03, runsensspec=f)
#make.shared(list=current, count=current, label=0.03)

#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.dist Run13_16S.full.97.dist)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.fasta Run13_16S.full.97.fasta)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.list Run13_16S.full.97.list)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.shared Run13_16S.full.97.shared)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.nr_v132.wang.pick.pick.taxonomy Run13_16S.full.97.taxonomy)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.pick.pick.count_table Run13_16S.full.97.count_table)

#rarefaction.single(shared=Run13_16S.full.97.shared)

#classify.otu(list=current, count=current, taxonomy=current, label=0.03)
#count.groups(shared=current)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.0.03.cons.taxonomy Run13_16S.full.97.taxonomy)
#system(copy Run13_16S_R1.trim.contigs.good.unique.good.filter.unique.precluster.pick.pick.pick.opti_mcc.0.03.cons.taxonomy Run13_16S.full.97.0.03.cons.taxonomy)
#system(copy Run13_16S.full.97.shared Run13_16S.full.97.otu.shared)
#sub.sample(shared=Run13_16S.full.97.otu.shared, size=2000)
#rename.file(shared=current, prefix=Run13_16S.subsample.2000)
#rarefaction.single(shared=current)
#summary.single(shared=current, calc=nseqs-coverage-sobs-invsimpson, subsample=T)
#sub.sample(shared=Run13_16S.full.97.otu.shared, size=5000)
#rename.file(shared=current, prefix=Run13_16S.subsample.5000)
#rarefaction.single(shared=current)
#summary.single(shared=current, calc=nseqs-coverage-sobs-invsimpson, subsample=T)
#sub.sample(shared=Run13_16S.full.97.otu.shared, size=10000)
#rename.file(shared=current, prefix=Run13_16S.subsample.10000)
#rarefaction.single(shared=current)
#summary.single(shared=current, calc=nseqs-coverage-sobs-invsimpson, subsample=T)

#get.oturep(column=Run13_16S.full.97.dist, list=Run13_16S.full.97.list, fasta=Run13_16S.full.97.fasta, count=Run13_16S.full.97.count_table, label=0.03)
#create.database(list=Run13_16S.full.97.list, label=0.03, repfasta=Run13_16S.full.97.0.03.rep.fasta, count=Run13_16S.full.97.0.03.rep.count_table, constaxonomy=Run13_16S.full.97.0.03.cons.taxonomy)
#bin.seqs(fasta=Run13_16S.full.97.fasta, list=Run13_16S.full.97.list, count=Run13_16S.full.97.count_table, label=0.03)
#rename.file(fasta=current, prefix=Run13_16S.full.97.0.03.bins)

#phylotype(taxonomy=Run13_16S.full.97.taxonomy)
#make.shared(list=Run13_16S.full.97.list, count=Run13_16S.full.97.count_table, label=1)
#classify.otu(list=Run13_16S.full.97.list, count=Run13_16S.full.97.count_table, taxonomy=Run13_16S.full.97.taxonomy, label=1)
